// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SplitwiseDemo.Data;

namespace SplitwiseDemo.Migrations
{
    [DbContext(typeof(SystemDBContext))]
    [Migration("20180813094717_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SplitwiseDemo.Models.Bill", b =>
                {
                    b.Property<int>("billid")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("bill_created_at");

                    b.Property<int>("bill_created_by_id");

                    b.Property<DateTime>("bill_updated_at");

                    b.Property<int>("bill_updated_by");

                    b.Property<string>("description");

                    b.Property<int?>("groupid");

                    b.Property<double>("total_amount");

                    b.HasKey("billid");

                    b.HasIndex("bill_created_by_id");

                    b.HasIndex("groupid");

                    b.ToTable("bills");
                });

            modelBuilder.Entity("SplitwiseDemo.Models.Currency", b =>
                {
                    b.Property<int>("currencyid")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("currency_name");

                    b.Property<string>("currency_symbol");

                    b.HasKey("currencyid");

                    b.ToTable("currencies");
                });

            modelBuilder.Entity("SplitwiseDemo.Models.Group", b =>
                {
                    b.Property<int>("groupid")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("group_created_by");

                    b.Property<DateTime>("group_created_on");

                    b.Property<string>("group_name");

                    b.Property<bool>("is_simplified_depts");

                    b.HasKey("groupid");

                    b.HasIndex("group_created_by");

                    b.ToTable("groups");
                });

            modelBuilder.Entity("SplitwiseDemo.Models.GroupMember", b =>
                {
                    b.Property<int>("memberid")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("groupid");

                    b.Property<int?>("userid");

                    b.HasKey("memberid");

                    b.HasIndex("groupid");

                    b.HasIndex("userid");

                    b.ToTable("groupmembers");
                });

            modelBuilder.Entity("SplitwiseDemo.Models.Language", b =>
                {
                    b.Property<int>("languageid")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("language_name");

                    b.HasKey("languageid");

                    b.ToTable("languages");
                });

            modelBuilder.Entity("SplitwiseDemo.Models.Timezone", b =>
                {
                    b.Property<int>("timezoneid")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("timezone_name");

                    b.HasKey("timezoneid");

                    b.ToTable("timezones");
                });

            modelBuilder.Entity("SplitwiseDemo.Models.User", b =>
                {
                    b.Property<int>("userid")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("created_on");

                    b.Property<int?>("currencyid");

                    b.Property<string>("email_id");

                    b.Property<int?>("languageid");

                    b.Property<string>("password");

                    b.Property<string>("phone_no");

                    b.Property<byte[]>("profile_pic");

                    b.Property<int?>("timezoneid");

                    b.Property<DateTime>("updated_on");

                    b.Property<string>("user_name");

                    b.HasKey("userid");

                    b.HasIndex("currencyid");

                    b.HasIndex("languageid");

                    b.HasIndex("timezoneid");

                    b.ToTable("users");
                });

            modelBuilder.Entity("SplitwiseDemo.Models.Bill", b =>
                {
                    b.HasOne("SplitwiseDemo.Models.User", "bill_created_by")
                        .WithMany("bill_creater")
                        .HasForeignKey("bill_created_by_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SplitwiseDemo.Models.Group", "group_id")
                        .WithMany("bills")
                        .HasForeignKey("groupid");
                });

            modelBuilder.Entity("SplitwiseDemo.Models.Group", b =>
                {
                    b.HasOne("SplitwiseDemo.Models.User", "user")
                        .WithMany("group")
                        .HasForeignKey("group_created_by")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SplitwiseDemo.Models.GroupMember", b =>
                {
                    b.HasOne("SplitwiseDemo.Models.Group", "group_id")
                        .WithMany("groupmembers")
                        .HasForeignKey("groupid");

                    b.HasOne("SplitwiseDemo.Models.User", "user_id")
                        .WithMany("groupmembers")
                        .HasForeignKey("userid");
                });

            modelBuilder.Entity("SplitwiseDemo.Models.User", b =>
                {
                    b.HasOne("SplitwiseDemo.Models.Currency", "currency_id")
                        .WithMany("user")
                        .HasForeignKey("currencyid");

                    b.HasOne("SplitwiseDemo.Models.Language", "language_id")
                        .WithMany("user")
                        .HasForeignKey("languageid");

                    b.HasOne("SplitwiseDemo.Models.Timezone", "timezone_id")
                        .WithMany("user")
                        .HasForeignKey("timezoneid");
                });
#pragma warning restore 612, 618
        }
    }
}
